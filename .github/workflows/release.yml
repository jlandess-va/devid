# This installs the dependencies, zips the files, uploads the artifact, and creates a GitHub release.
# This appears to work for Windows, but in macOS it has permissions issues. Linux not tested.
name: Package and Release

on: [push]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # MacOS
          # Ubuntu
          - os: ubuntu-latest
            arch: x86_64
            node: 20
    steps:
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: check python version
        run: python --version
      - name: Install duckdb python dependencies
        run: pip install duckdb
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: build static website
        run: |
          npm install
          npm ci
          npm run sources
          npm run build
      - name: ensure jekyll can't run
        run: touch build/.nojekyll

              
      - name: Deploy Github Page
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          branch: gh-pages

      - name: Replace symlinks with actual files (Unix)
        if: runner.os != 'Windows'
        run: |
          find node_modules/.bin -type l -print0 | while IFS= read -r -d '' link; do
            target=$(readlink "$link")
            rm "$link"
            cp "$(dirname "$link")/$target" "$link"
          done

      - name: Replace symlinks with actual files (Windows)
        if: runner.os == 'Windows'
        run: |
          Get-ChildItem -Path node_modules\.bin -Link | ForEach-Object {
            $Target = (Get-Item $_.FullName).Target
            Remove-Item $_.FullName
            Copy-Item $Target $_.FullName
          }

      - name: Zip files (Windows)
        if: runner.os == 'Windows'
        run: powershell.exe -Command "Compress-Archive -Path . -DestinationPath evidence-${{ matrix.os }}-${{ matrix.arch }}-node${{ matrix.node }}.zip -Force"

      - name: Zip files (Unix)
        if: runner.os != 'Windows'
        run: zip -r evidence-${{ matrix.os }}-${{ matrix.arch }}-node${{ matrix.node }}.zip . -x "*.git*"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: evidence-${{ matrix.os }}-${{ matrix.arch }}-node${{ matrix.node }}
          path: evidence-${{ matrix.os }}-${{ matrix.arch }}-node${{ matrix.node }}.zip


